process testJET = {

   include "FWCore/MessageService/data/MessageLogger.cfi"
   replace MessageLogger.cout.threshold = "DEBUG"
   replace MessageLogger.cerr.default.limit = 10

# OK for running at CERN
  source = PoolSource {
    untracked vstring fileNames = {
       '/store/RelVal/2006/12/16/RelVal120QCD_pt600_800/0000/803D90EE-588D-DB11-8750-003048758A09.root',
       '/store/RelVal/2006/12/16/RelVal120QCD_pt600_800/0000/E6272CEE-588D-DB11-9B6C-001731A2832F.root'
    }
    untracked int32 maxEvents   = 50
   }

# this is to get a CandidateCollection from a JetCollection
  module caloJetCollectionClone = CaloJetShallowCloneProducer{
    InputTag src = iterativeCone5CaloJets
  }

  module genJetCollectionClone = GenJetShallowCloneProducer{
    InputTag src = iterativeCone5GenJets
  }

# Selection of jets
  module caloJetSele = PtMinCandSelector{
    InputTag src = caloJetCollectionClone
    double ptMin        = 20.0
  }

  module genJetSele = PtMinCandSelector{
    InputTag src = genJetCollectionClone
    double ptMin        = 20.0
  }

# The matching routine
  module jetMatch = GenJetRecoJetMatcher {
    InputTag src      = genJetSele
    InputTag matched  = caloJetSele
    untracked bool printDebug = true
  }

# A simple analyzer
  module printJet = jetTest{
    InputTag src   = genJetSele
    InputTag matched  = caloJetSele
    InputTag matchMap = jetMatch
    untracked string HistOutFile = "myPlots.root"
  }

  module printEventNumber = AsciiOutputModule { }
  path p = {caloJetCollectionClone, genJetCollectionClone, caloJetSele, genJetSele, jetMatch, printJet }

# Now order modules for execution
  endpath outpath = {printEventNumber}

}

